version: "2.1"
executors:
  builder:
    docker:
      - image: docker.mirror.hashicorp.services/circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
  builder-machine:
    resource_class: xlarge
    machine:
      image: ubuntu-1604:202007-01
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
      AUTO_INSTALL_TOOLS: "YES"
      BUILDKIT_PROGRESS: plain
      PRODUCT_REVISION: ""
jobs:
  build-common-layers:
    executor: builder-machine
    steps:
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Layer Cache: copy-source'
      - run:
          command: LAYER_SPEC_ID=03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63 make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 00-base-acb5298039d979012605aa8af44f1cb03bc34809-image
          name: Build base layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 01-ui-7643076cb6e153b7cbbdb1ae124196b6e055831d-image
          name: Build ui layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 02-go-modules-28439835ef58deab2d0b0cda96d72784d77871bd-image
          name: Build go-modules layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63-image
          name: Build copy-source layer
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -f packages*.lock/layer.mk 03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63-save
          name: Build copy-source layer
      - save_cache:
          paths:
            - .buildcache/archives/03-copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63.tar.gz
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          name: 'Save Layer Cache: copy-source'
  bundle-releases:
    executor: builder
    steps:
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-all-package-cache-keys
          name: Write all package cache keys
      - run:
          command: mkdir -p .buildcache && echo "*" > .buildcache/.gitignore
          name: Ignore .buildcache
      - restore_cache:
          key: package-096213e11f91e97b5694a2dcddb9593a25835096-{{checksum ".buildcache/cache-keys/package-096213e11f91e97b5694a2dcddb9593a25835096"}}
          name: Restore package cache
      - restore_cache:
          key: package-1f8ae732b7bdda3c2f56446801700c23f4bd4269-{{checksum ".buildcache/cache-keys/package-1f8ae732b7bdda3c2f56446801700c23f4bd4269"}}
          name: Restore package cache
      - restore_cache:
          key: package-ef2e1df0744796672730e319915a677c1456cf10-{{checksum ".buildcache/cache-keys/package-ef2e1df0744796672730e319915a677c1456cf10"}}
          name: Restore package cache
      - restore_cache:
          key: package-b15b462c0ce8950f7ec359ad5a6536aa3004d215-{{checksum ".buildcache/cache-keys/package-b15b462c0ce8950f7ec359ad5a6536aa3004d215"}}
          name: Restore package cache
      - restore_cache:
          key: package-f076ac1772ac244433d6b0a7a2e3814f24271669-{{checksum ".buildcache/cache-keys/package-f076ac1772ac244433d6b0a7a2e3814f24271669"}}
          name: Restore package cache
      - restore_cache:
          key: package-462b890e55b3b9a10b31f941a84656dc276f380a-{{checksum ".buildcache/cache-keys/package-462b890e55b3b9a10b31f941a84656dc276f380a"}}
          name: Restore package cache
      - restore_cache:
          key: package-f9d112e56906e982873395315e4ea60889a0a6d2-{{checksum ".buildcache/cache-keys/package-f9d112e56906e982873395315e4ea60889a0a6d2"}}
          name: Restore package cache
      - restore_cache:
          key: package-d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d-{{checksum ".buildcache/cache-keys/package-d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d"}}
          name: Restore package cache
      - restore_cache:
          key: package-4d4d087d138c89148be6fe63138aed4c82595638-{{checksum ".buildcache/cache-keys/package-4d4d087d138c89148be6fe63138aed4c82595638"}}
          name: Restore package cache
      - restore_cache:
          key: package-1752cb68747597aefb6f266a2bb969cf593a670c-{{checksum ".buildcache/cache-keys/package-1752cb68747597aefb6f266a2bb969cf593a670c"}}
          name: Restore package cache
      - restore_cache:
          key: package-fe46ec7704a4b8c6481f28bd1464ae75abf5b61b-{{checksum ".buildcache/cache-keys/package-fe46ec7704a4b8c6481f28bd1464ae75abf5b61b"}}
          name: Restore package cache
      - restore_cache:
          key: package-37ee5e7c50fb32981de6066c28468ac8985c3acd-{{checksum ".buildcache/cache-keys/package-37ee5e7c50fb32981de6066c28468ac8985c3acd"}}
          name: Restore package cache
      - restore_cache:
          key: package-2932dff7c8c311b66df0d89a738857acccba50d6-{{checksum ".buildcache/cache-keys/package-2932dff7c8c311b66df0d89a738857acccba50d6"}}
          name: Restore package cache
      - restore_cache:
          key: package-5a486d00eaed785adcbb1b013a51294ac2136ae9-{{checksum ".buildcache/cache-keys/package-5a486d00eaed785adcbb1b013a51294ac2136ae9"}}
          name: Restore package cache
      - restore_cache:
          key: package-ce81396e6037d5d2cbd6ff8caa99c81860367a1b-{{checksum ".buildcache/cache-keys/package-ce81396e6037d5d2cbd6ff8caa99c81860367a1b"}}
          name: Restore package cache
      - run:
          command: make package-meta-all
          name: Write Package Metadata
      - run:
          command: make aliases
          name: Write package aliases
      - run:
          command: ls -lahR .buildcache
          name: List Build Cache
      - run:
          command: cp packages*.lock/pkgs.yml lockfile-72d65fdf8d66fcc1.yml
          name: Update Lockfile Name
      - run:
          command: tar -czf packages-72d65fdf8d66fcc1.tar.gz .buildcache/packages lockfile-72d65fdf8d66fcc1.yml
          name: Create Raw Package Tarball
      - run:
          command: tar -czf meta-72d65fdf8d66fcc1.tar.gz .buildcache/packages/store/*.json lockfile-72d65fdf8d66fcc1.yml
          name: Create Metadata Tarball
      - store_artifacts:
          path: lockfile-72d65fdf8d66fcc1.yml
      - store_artifacts:
          path: packages-72d65fdf8d66fcc1.tar.gz
      - store_artifacts:
          path: meta-72d65fdf8d66fcc1.tar.gz
      - store_artifacts:
          path: .buildcache/packages
  darwin_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-096213e11f91e97b5694a2dcddb9593a25835096-{{checksum ".buildcache/cache-keys/package-096213e11f91e97b5694a2dcddb9593a25835096"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-096213e11f91e97b5694a2dcddb9593a25835096-{{checksum ".buildcache/cache-keys/package-096213e11f91e97b5694a2dcddb9593a25835096"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 096213e11f91e97b5694a2dcddb9593a25835096
  freebsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1f8ae732b7bdda3c2f56446801700c23f4bd4269-{{checksum ".buildcache/cache-keys/package-1f8ae732b7bdda3c2f56446801700c23f4bd4269"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1f8ae732b7bdda3c2f56446801700c23f4bd4269-{{checksum ".buildcache/cache-keys/package-1f8ae732b7bdda3c2f56446801700c23f4bd4269"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1f8ae732b7bdda3c2f56446801700c23f4bd4269
  freebsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ef2e1df0744796672730e319915a677c1456cf10-{{checksum ".buildcache/cache-keys/package-ef2e1df0744796672730e319915a677c1456cf10"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ef2e1df0744796672730e319915a677c1456cf10-{{checksum ".buildcache/cache-keys/package-ef2e1df0744796672730e319915a677c1456cf10"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ef2e1df0744796672730e319915a677c1456cf10
  freebsd_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-b15b462c0ce8950f7ec359ad5a6536aa3004d215-{{checksum ".buildcache/cache-keys/package-b15b462c0ce8950f7ec359ad5a6536aa3004d215"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-b15b462c0ce8950f7ec359ad5a6536aa3004d215-{{checksum ".buildcache/cache-keys/package-b15b462c0ce8950f7ec359ad5a6536aa3004d215"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: b15b462c0ce8950f7ec359ad5a6536aa3004d215
  linux_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f076ac1772ac244433d6b0a7a2e3814f24271669-{{checksum ".buildcache/cache-keys/package-f076ac1772ac244433d6b0a7a2e3814f24271669"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f076ac1772ac244433d6b0a7a2e3814f24271669-{{checksum ".buildcache/cache-keys/package-f076ac1772ac244433d6b0a7a2e3814f24271669"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f076ac1772ac244433d6b0a7a2e3814f24271669
  linux_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-462b890e55b3b9a10b31f941a84656dc276f380a-{{checksum ".buildcache/cache-keys/package-462b890e55b3b9a10b31f941a84656dc276f380a"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-462b890e55b3b9a10b31f941a84656dc276f380a-{{checksum ".buildcache/cache-keys/package-462b890e55b3b9a10b31f941a84656dc276f380a"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 462b890e55b3b9a10b31f941a84656dc276f380a
  linux_arm_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-f9d112e56906e982873395315e4ea60889a0a6d2-{{checksum ".buildcache/cache-keys/package-f9d112e56906e982873395315e4ea60889a0a6d2"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-f9d112e56906e982873395315e4ea60889a0a6d2-{{checksum ".buildcache/cache-keys/package-f9d112e56906e982873395315e4ea60889a0a6d2"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: f9d112e56906e982873395315e4ea60889a0a6d2
  linux_arm64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d-{{checksum ".buildcache/cache-keys/package-d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d-{{checksum ".buildcache/cache-keys/package-d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: d50974b63aacd9ac1c2ce1710fb4fb5ed257b07d
  netbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-4d4d087d138c89148be6fe63138aed4c82595638-{{checksum ".buildcache/cache-keys/package-4d4d087d138c89148be6fe63138aed4c82595638"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-4d4d087d138c89148be6fe63138aed4c82595638-{{checksum ".buildcache/cache-keys/package-4d4d087d138c89148be6fe63138aed4c82595638"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 4d4d087d138c89148be6fe63138aed4c82595638
  netbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-1752cb68747597aefb6f266a2bb969cf593a670c-{{checksum ".buildcache/cache-keys/package-1752cb68747597aefb6f266a2bb969cf593a670c"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-1752cb68747597aefb6f266a2bb969cf593a670c-{{checksum ".buildcache/cache-keys/package-1752cb68747597aefb6f266a2bb969cf593a670c"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 1752cb68747597aefb6f266a2bb969cf593a670c
  openbsd_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-fe46ec7704a4b8c6481f28bd1464ae75abf5b61b-{{checksum ".buildcache/cache-keys/package-fe46ec7704a4b8c6481f28bd1464ae75abf5b61b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-fe46ec7704a4b8c6481f28bd1464ae75abf5b61b-{{checksum ".buildcache/cache-keys/package-fe46ec7704a4b8c6481f28bd1464ae75abf5b61b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: fe46ec7704a4b8c6481f28bd1464ae75abf5b61b
  openbsd_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-37ee5e7c50fb32981de6066c28468ac8985c3acd-{{checksum ".buildcache/cache-keys/package-37ee5e7c50fb32981de6066c28468ac8985c3acd"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-37ee5e7c50fb32981de6066c28468ac8985c3acd-{{checksum ".buildcache/cache-keys/package-37ee5e7c50fb32981de6066c28468ac8985c3acd"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 37ee5e7c50fb32981de6066c28468ac8985c3acd
  solaris_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-2932dff7c8c311b66df0d89a738857acccba50d6-{{checksum ".buildcache/cache-keys/package-2932dff7c8c311b66df0d89a738857acccba50d6"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-2932dff7c8c311b66df0d89a738857acccba50d6-{{checksum ".buildcache/cache-keys/package-2932dff7c8c311b66df0d89a738857acccba50d6"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 2932dff7c8c311b66df0d89a738857acccba50d6
  windows_386_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-5a486d00eaed785adcbb1b013a51294ac2136ae9-{{checksum ".buildcache/cache-keys/package-5a486d00eaed785adcbb1b013a51294ac2136ae9"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-5a486d00eaed785adcbb1b013a51294ac2136ae9-{{checksum ".buildcache/cache-keys/package-5a486d00eaed785adcbb1b013a51294ac2136ae9"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: 5a486d00eaed785adcbb1b013a51294ac2136ae9
  windows_amd64_package:
    executor: builder
    steps:
      - setup_remote_docker:
          version: 19.03.12
          docker_layer_caching: false
      - add_ssh_keys:
          fingerprints:
            - 0e:03:77:f4:e2:c3:56:c2:53:6a:03:e1:31:91:2f:06
      - checkout:
          path: .
      - run:
          command: make -C packages*.lock write-package-cache-key
          name: Write package cache key
      - restore_cache:
          key: package-ce81396e6037d5d2cbd6ff8caa99c81860367a1b-{{checksum ".buildcache/cache-keys/package-ce81396e6037d5d2cbd6ff8caa99c81860367a1b"}}
          name: Restore package cache
      - run:
          command: |2

            if ! { PKG=$(find .buildcache/packages/store -maxdepth 1 -mindepth 1 -name '*.zip' 2> /dev/null) && [ -n "$PKG" ]; }; then
              echo "No package found, continuing with build."
              exit 0
            fi
            echo "Package already cached, skipping build."
            circleci-agent step halt
          name: Check cache status
      - run:
          command: make -C packages*.lock write-builder-cache-keys
          name: Write builder layer cache keys
      - restore_cache:
          key: copy-source_7c46_{{checksum ".buildcache/cache-keys/copy-source-7c4665642b5165959a3b5c0359ec4f9263440c63"}}
          keys:
            - go-modules_2843_{{checksum ".buildcache/cache-keys/go-modules-28439835ef58deab2d0b0cda96d72784d77871bd"}}
            - ui_7643_{{checksum ".buildcache/cache-keys/ui-7643076cb6e153b7cbbdb1ae124196b6e055831d"}}
            - base_acb5_{{checksum ".buildcache/cache-keys/base-acb5298039d979012605aa8af44f1cb03bc34809"}}
          name: 'Restore Builder Image Cache: copy-source'
      - run:
          command: make -C packages*.lock load-builder-cache
          name: Load whatever builder cache we have (if any) into the Docker daemon
          no_output_timeout: 30m
      - run:
          command: |2-

            KEYFILE="$HOME/.ssh/id_rsa_c6969882dc046c39ddac8305e3151c98"
            eval "$(ssh-agent -s)"
            if [ -f "$KEYFILE" ]; then
              ssh-add "$KEYFILE"
            else
              echo "==> INFO: SSH key for github.com not found"
              echo "    Attempts to access private repositories from within"
              echo "    the build will fail, e.g. for private go modules, or"
              echo "    attempts to directly clone private repositories."
            fi

            make -C packages*.lock package
          name: Compile Package
      - run:
          command: ls -lahR .buildcache/packages
          name: List packages
      - save_cache:
          paths:
            - .buildcache/packages/store
          key: package-ce81396e6037d5d2cbd6ff8caa99c81860367a1b-{{checksum ".buildcache/cache-keys/package-ce81396e6037d5d2cbd6ff8caa99c81860367a1b"}}
          name: Save package cache
    environment:
      PACKAGE_SPEC_ID: ce81396e6037d5d2cbd6ff8caa99c81860367a1b
workflows:
  build-72d65fdf8d66fcc1:
    jobs:
      - build-common-layers: {}
      - darwin_amd64_package:
          requires:
            - build-common-layers
      - bundle-releases:
          requires:
            - darwin_amd64_package
            - freebsd_386_package
            - freebsd_amd64_package
            - freebsd_arm_package
            - linux_386_package
            - linux_amd64_package
            - linux_arm_package
            - linux_arm64_package
            - netbsd_386_package
            - netbsd_amd64_package
            - openbsd_386_package
            - openbsd_amd64_package
            - solaris_amd64_package
            - windows_386_package
            - windows_amd64_package
      - freebsd_386_package:
          requires:
            - build-common-layers
      - freebsd_amd64_package:
          requires:
            - build-common-layers
      - freebsd_arm_package:
          requires:
            - build-common-layers
      - linux_386_package:
          requires:
            - build-common-layers
      - linux_amd64_package:
          requires:
            - build-common-layers
      - linux_arm_package:
          requires:
            - build-common-layers
      - linux_arm64_package:
          requires:
            - build-common-layers
      - netbsd_386_package:
          requires:
            - build-common-layers
      - netbsd_amd64_package:
          requires:
            - build-common-layers
      - openbsd_386_package:
          requires:
            - build-common-layers
      - openbsd_amd64_package:
          requires:
            - build-common-layers
      - solaris_amd64_package:
          requires:
            - build-common-layers
      - windows_386_package:
          requires:
            - build-common-layers
      - windows_amd64_package:
          requires:
            - build-common-layers
